@startuml
class block.Block {
+ <<Create>> Block(BlockType)
+ <<Create>> Block()
}
abstract class entity.base.Entity {
# String name
# int health
+ <<Create>> Entity()
+ <<Create>> Entity(String)
+ <<Create>> Entity(String,int)
+ String toString()
+ String getName()
+ void setName(String)
+ int getHealth()
+ void setHealth(int)
+ void initializeTexture(String)
}
interface entity.base.Attackable {
~ boolean attack(Entity)
}
class scene.Menu {
~ Text title
~ Label label
+ boolean gameStart
+ <<Create>> Menu()
+ void initializeStartText()
}
class entity.derived.BoosterBlock {
+ <<Create>> BoosterBlock()
}
class application.Main {
+ void start(Stage)
+ {static} void main(String[])
}
class application.GameController {
+ {static} boolean debugEnabled
- {static} int points
# {static} int terrainCount
- {static} Timer timeElapsed
- {static} boolean isGameEnd
+ {static} int getPoints()
+ {static} void increasePoint(int)
+ {static} void startTimer()
+ {static} boolean isGameEnd()
+ {static} void setGameEnd()
}
class entity.derived.Coin {
- int point
+ <<Create>> Coin()
+ <<Create>> Coin(int)
+ void collect()
+ void despawn()
}
class entity.derived.Enemy {
+ <<Create>> Enemy(String)
+ boolean attack(Entity)
}
class entity.derived.Player {
- boolean goNextScene
- double vy
- double ay
- double upperBoundX
- double upperBoundY
- double lowerBoundX
+ <<Create>> Player()
+ <<Create>> Player(String)
+ void initializeMovement()
+ void returnToBegin()
+ boolean move(double,double)
+ boolean moveToPos(double,double)
+ boolean attack(Entity)
+ boolean isGoNextScene()
+ void setGoNextScene(boolean)
}
class entity.derived.Booster {
+ void collect()
}
interface entity.base.Collectable {
~ void collect()
}
class scene.Terrain {
- int terrainID
+ <<Create>> Terrain(int)
+ void readTerrain()
+ int getTerrainID()
+ void initializeTerrain()
}


javafx.scene.layout.Pane <|-- block.Block
javafx.scene.image.ImageView <|-- entity.base.Entity
javafx.scene.layout.VBox <|-- scene.Menu
entity.base.Entity <|-- entity.derived.BoosterBlock
javafx.application.Application <|-- application.Main
entity.base.Collectable <|.. entity.derived.Coin
entity.base.Entity <|-- entity.derived.Coin
entity.base.Attackable <|.. entity.derived.Enemy
entity.base.Entity <|-- entity.derived.Enemy
entity.base.Attackable <|.. entity.derived.Player
entity.base.Entity <|-- entity.derived.Player
entity.base.Collectable <|.. entity.derived.Booster
entity.base.Entity <|-- entity.derived.Booster
javafx.scene.layout.GridPane <|-- scene.Terrain
@enduml